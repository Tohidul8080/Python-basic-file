'''from abc import ABC, abstractmethod
class food(ABC):
      @abstractmethod

      def taste(self):
        pass

f = food()'''
'''
from abc import ABC, abstractmethod

class food(ABC):
    @abstractmethod
    def taste(self):
        pass

class pizza(food):
    def taste(self):
        print("12 inch pizza")
p = pizza()
p.taste() '''
'''
from abc import ABC, abstractmethod
class food(ABC):
    @abstractmethod
    def taste(self):
        pass

class pizza(food):
    def taste(self):
        print("pizza is delicious")
    def size(self):
        print("12-inch pizza")

p= pizza()
p.size()  '''

from abc import ABC, abstractmethod


class A(ABC):

    @abstractmethod
    def method1(self):
        pass


class B(A):
    @abstractmethod
    def method2(self):
        pass


class C(B):
    def method1(self):
        print("method1 is overridden")

    def method2(self):
        print("method 2 is overridden")


c =C()
c.method1()
c.method2()


















